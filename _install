#! /bin/sh -x

# This install script is heavily based on the PyETC install script
# CRDS is intended to use the same LAMP stack as pyetc, with emphasis on Python

# ----------------------------------------------------------
#  CRDS Environment setup
# ----------------------------------------------------------

rm env.*

# Create make_env.tmp
source ./make_env

. ./make_env.tmp
rm make_env.tmp

# ----------------------------------------------------------
#  CRDS file system setup
# ----------------------------------------------------------

source ./_file_system_setup

# ----------------------------------------------------------
#  CRDS Server systemd service setup
# ----------------------------------------------------------

# Done by ITSD:    cp host/crds.service  /etc/systemd/system
rm -f /home/crds/crds_start
cp host/crds_start /home/crds
chmod 500 /home/crds/crds_start

rm -f /home/crds/crds_stop
cp host/crds_stop /home/crds
chmod 500 /home/crds/crds_stop

# ----------------------------------------------------------
#  CRDS Server Apache configuration and setup
# ----------------------------------------------------------

source ./_meta_server_setup

# ----------------------------------------------------------
#  CRDS Code Installation and static file
# ----------------------------------------------------------

if [ "$CRDS_USECASE" != "django" ]
then
    rm -rf $CRDS_INSTALL_DIR/python/lib/python/crds*
    rm -rf $CRDS/static
fi

#  INSTALL CORE CRDS CLIENT LIBRARY
(
    cd ../CRDS; ./install
)   # --home $install_dir/python)

# INSTALL crds_server 
(./save_version >sources/git_version.py; 

config="sources/configs/config.${server_mode}.${observatory}.py"
echo "Using configuration " ${config}
cp ${config} sources/site_config.py

crds_database="sources/configs/database.${server_mode}.${observatory}.py"
echo "Using crds_database" ${crds_database}
cp ${crds_database} sources/crds_database.py

cd sources; 
# python setup.py install --force --home $install_dir/python |& grep -v /static |& grep -v /test_data |& grep -v /templates)
python setup.py install --force |& grep -v /static |& grep -v /test_data |& grep -v /templates
)

echo "Silently installing static files."
./manage collectstatic  |& grep -v /static |& grep -v /test_data |& grep -v /templates <<EOF
yes
EOF

