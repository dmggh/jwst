#! /bin/tcsh -fx

mkdir -p ${CRDS_STACK}
mkdir -p ${CRDS_STACK_SOURCES}
 
 # Backup and clear locally stored built stacks
setenv CONDA_NAME crds_conda3-12

setenv MASTER_REMOTE_SOURCE /eng/ssb/crds/installer4
setenv SOURCE_NAME installer4.${CONDA_NAME} 
setenv LOCAL_SOURCE  ${CRDS_STACK_SOURCES}/${SOURCE_NAME}
setenv FROZEN_REMOTE_SOURCE /eng/ssb/crds/${SOURCE_NAME}

# Backup and clear locally stored built stacks
cd ${CRDS_STACK_SOURCES}
rm -rf ${CRDS_STACK}.old
mv ${CRDS_STACK} ${CRDS_STACK}.old
rm -rf ${LOCAL_SOURCE}

# Copy remote master source code to local version-specific copy
cp -r ${MASTER_REMOTE_SOURCE} ${LOCAL_SOURCE}
cd ${LOCAL_SOURCE}/build
git checkout $CONDA_NAME

# Clean up CRDS meta-package build directory
rm -f *.err
./meta clean >& /dev/null

# Download and install miniconda, add to $PATH
mkdir -p ${LOCAL_SOURCE}/conda-sources
wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    -O ${LOCAL_SOURCE}/conda-sources/miniconda3.sh
bash ${LOCAL_SOURCE}/conda-sources/miniconda3.sh -b -p ${CRDS_STACK}
setenv PATH ${CRDS_STACK}/bin:${PATH}
rehash 

# conda config --add channels http://ssb.stsci.edu/astroconda
conda config python=${PY_VER} --add channels http://ssb.stsci.edu/conda-dev 

# Install stsci and jwst conda packages,  also minimally supports HST as needed.
# Primarily JWST dependency is for CAL data models and dependencies.
conda install python=${PY_VER} stsci --quiet --yes
conda install python=${PY_VER} astropy numpy scipy asdf gwcs ipython requests lxml pymysql --quiet --yes
conda install --file http://ssb.stsci.edu/releases/jwstdp/0.12.2/latest-linux

# conda install fitsverify cfitsio --quiet --yes
# conda install --quiet --yes --file ${CRDS}/CRDS_server/host/${CONDA_NAME}.pkgs

# Use local copies of JWST CAL code and fitsverify for more stability
conda remove python=${PY_VER} --quiet --yes --force cfitsio fitsverify # jwst
conda install python=${PY_VER} --yes --quiet setuptools

# Install CRDS metapackages,  those not included with conda or overridden.
cd ${LOCAL_SOURCE}/build
./meta install @crds3-fixed  |& tee crds3.err
# ./meta install jwst |& tee jwst.err
./meta install cfitsio fitsverify |& tee fitsverify.err

conda uninstall --yes --quiet --force pkg-config pkgconfig
pip uninstall --yes Django

./meta install mod_wsgi-master |& tee mod_wsgi.err
./meta install Django
./meta clean >& /dev/null

# Fix pyodbc/unixODBC to use STSCI copy and config files.
conda uninstall --yes --force unixodbc

cp /usr/etc/odbc.ini /home/crds/.odbc.ini
cp /usr/etc/odbcinst.ini /home/crds/.odbcinst.ini
rehash

git status  |& tee git.status
git log --stat |& tee git.log

# List and download conda packages just installed in this stack.
# mkdir -p ${LOCAL_SOURCE}/conda-sources
cd ${LOCAL_SOURCE}/conda-sources
conda list python=${PY_VER} --explicit |& tee ${CONDA_NAME}.txt
./joes_download ${CONDA_NAME}.txt ${LOCAL_SOURCE}/conda-sources

# Copy local installer to frozen Central Store copy for frozen installs on other strings.
rm -rf ${FROZEN_REMOTE_SOURCE}
cp -r ${LOCAL_SOURCE} ${FROZEN_REMOTE_SOURCE}


# Install the entire base to get mercurial... for this.
# ../src/pull_local

