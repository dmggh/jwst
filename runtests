#! /bin/tcsh

# usage: ./runtests <parameters to "manage.py test"...>

# Django-1.8 syntax to run single test, e.g.:
#
# ./runtests live crds_server.interactive.tests.Jwst.test_certify_post_fits_uploaded

echo "Script path:" $0

if ( $1 == "live") then
    shift;
    set switch_port=0
else 
    set switch_port=1
endif

cd ${CRDS_SERVER_SOURCES}

if ($switch_port) then
    set_backup_url True
else
    echo "================================================================================"
    echo "Testing on live server"
    echo "================================================================================"
endif

source /home/crds/.setenv

setenv LOG ${CRDS_SERVER_SOURCES}/runtests.${CRDS_PROJECT}.${CRDS_USECASE}.err

echo "Removing any stale test databases"
./manage dbshell <<EOF  >& /dev/null
drop database test_crds_${CRDS_PROJECT}_${CRDS_USECASE};
EOF

# setenv TEST_CMD "python -u manage.py test --verbosity=2 --with-coverage --cover-erase --cover-html --cover-package=crds -cover-branches --cover-html-dir=$CRDS/CRDS_server/coverage"

# Removed coverage switches due to incompatibility with django-1.8.2
setenv TEST_CMD "python -Wall -u -m crds_server.manage test --verbosity=2"

if ($# > 0) then
    # subsequent parameters are apps to test
    echo "================================================================================"
    echo "Running tests $*"
    echo "================================================================================"
else 
    echo "================================================================================"
    echo "Running implied tests ALL"
    echo "================================================================================"
endif
setenv PROJ `capitalize $CRDS_PROJECT`
cd ${CRDS_INSTALL_DIR}

if ("$*" != "") then    
    $TEST_CMD $* |& tee $LOG
else
    $TEST_CMD crds_server.jsonapi.tests.$PROJ crds_server.interactive.tests.$PROJ |& tee $LOG
endif

if ($switch_port) then
    set_backup_url False
endif
