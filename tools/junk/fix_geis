#! /usr/bin/env pysh

"""Limited use script to fix GEIS data files which were randomly copied from
either their original source or their linux source on /grp/hst/cdbs.   They
should all be linux.  In theory this relies on a corrected cdbs file paths
directory which maps any file which has a linux version onto that linux version.
This also "fixes" files which were originally randomly copied from the linux version
(in reality, already correct) because source file paths aren't preserved in 
the initialization process so it doesn't really know without computing an sha1sum,
by which time it might as well be reinitialized.
"""


from crds.server.interactive import models
from crds.hst import locate
from crds import log, data_file, rmap

map = models.get_fileblob_map()

for name in map:
    with log.error_on_exception("Failed processing", repr(name)):
        cdbs_path = locate.locate_server_reference(name)
    	if data_file.is_geis_data(name) and "linux" in cdbs_path:
       	   log.info("Updating", repr(cdbs_path))
       	   cache_path = rmap.locate_file(name, "hst")
       	   % chmod +w $cache_path
       	   % cp -v $cdbs_path $cache_path
       	   % chmod 444 $cache_path
       	   blob = map[name]
       	   blob.add_slow_fields(allow_duplicates=True)
       	   blob.save()
