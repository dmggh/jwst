#! /usr/bin/env pysh

"""This script is used to update the database when the model schema of an application
changes, e.g. changing a column width.   It dumps the database as json,  generates SQL
to clear the database and clears it,  syncs the database to create the tables according
to the new models,  then reloads the database from the json.

In theory this will be more automatic starting with Django-1.7 and "migrations".  This
took at least 2 hours of head banging and Googling,  hence a script.
"""

usage("<django_app>", 1)

application = sys.argv[1]

# Dump the database for application
% ./manage dumpdata ${application} --indent=4  >${application}.json

# Wipe the database for application
% ./manage sqlclear ${application} >clear.sql
% ./manage dbshell <clear.sql
% ./manage syncdb
% rm clear.sql

# Reload the database for application under the new schema
# NOTE: as-of Django-1.6,  save yourself some hair, MUST be abolsute path:
% ./manage loaddata `pwd`/${application}.json
% rm ${application}.json


