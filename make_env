#! /bin/sh 

# This script creates env.csh and installs site specific database and config files.

if [ "$1" != "hst" ] && [ "$1" != "jwst" ]; then
	echo 'usage: ./install [jwst|hst] [django|dev|test|ops|bit|b6it|dit|ait]'
	exit -1
fi

observatory=$1; shift

if [ "$1" != "django" ] && [ "$1" != "dev" ] && [ "$1" != "ops" ] && [ "$1" != "test" ] && \
    [ "$1" != "ait" ] && [ "$1" != "bit" ]  &&  [ "$1" != "cit" ] &&  [ "$1" != "dit" ] ; then
	echo 'usage: ./install [jwst|hst] [django|dev|ops|test|ait|bit|cit|dit]'
	exit -1;
fi

server_mode=$1; shift

if [ ! -d $CRDS ]
then
    ln -s $SERVER_LOCAL $CRDS
fi

if [ ! -d $CRDS ]
then
    ln -s $CRDS_SERVER_ISILON   $CRDS_IFS
fi

export SERVER_SOURCES=sources   # CRDS_server/sources

config="sources/configs/config.${server_mode}.${observatory}.py"
echo "Using configuration " ${config}
cp ${config} sources/site_config.py

crds_database="sources/configs/database.${server_mode}.${observatory}.py"
echo "Using crds_database" ${crds_database}
cp ${crds_database} sources/crds_database.py

###
### gather config values that we need in this script
###

python -m sources.sh_config install_dir CRDS_PATH server_files port PYSYN_CDBS\
 servertype dbtype debug data_dir debug_javascript noreload map_path map_path_full ref_path ref_path_full \
 CRDS_URL CRDS_CATALOG_DIR CRDS_DELIVERY_DIR FILE_UPLOAD_TEMP_DIR CRDS_INGEST_DIR CRDS_ARCHIVE_CACHE_DIR apachemod > make_env.tmp
. ./make_env.tmp

PYTHONPATH=$install_dir/python/lib/python/crds/server:$install_dir/python/lib/python
export PYTHONPATH

PATH=$install_dir/python/bin:$install_dir/bin:$PATH
export PATH

(
        echo '#! /bin/csh'
        echo 'setenv PYTHONPATH '$PYTHONPATH
        echo 'unsetenv DJANGO_SETTINGS_MODULE PYSYN_CDBS CRDS_DJANGO_SERVER'
	echo 'setenv SERVER_PORT '$port
	echo 'setenv PATH '$PATH
	echo 'setenv CRDS_INSTALL_DIR ' $install_dir
	echo 'setenv CRDS_SERVER_URL ' $CRDS_URL
	echo 'setenv CRDS_PATH ' $CRDS_PATH
	echo 'setenv CRDS_SERVER_FILES ' ${server_files}
	echo 'setenv DJANGO_SETTINGS_MODULE crds.server.settings'
	echo 'setenv OPENSSL_NO_DEFAULT_ZLIB 1'
) > env.csh

perl -p -e's/^setenv (\w+)\s+(.*)/export \1="\2"/g' env.csh >env.sh
perl -pi -e 's./bin/csh./bin/sh.g' env.sh
perl -pi -e 's/unsetenv/unset/g' env.sh

