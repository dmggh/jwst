#! /bin/tcsh

cd ${CRDS}/CRDS_server
source env.csh

setenv TAIL ${CRDS_PROJECT}.${CRDS_USECASE}
setenv ETAIL ${TAIL}.err

echo "==========================================================="
echo /home isolation tagging
echo "==========================================================="
echo >$HOME/isolate.$TAIL
ls -lt $HOME/isolate.*

system_status

if ( ( "$CRDS_USECASE" == "dev" ) || ( "$CRDS_USECASE" == "bit" ) ) then
    echo "=========================================================="
    echo "Disabling Cron for max 90 minutes"
    echo "=========================================================="
    # no_cron_til now + 90 minutes  # backup in case script is killed
    crontab </dev/null

    echo "=========================================================="
    echo "Stack Build"
    echo "=========================================================="
    host/build_conda3 >& ${CRDS_CRON}/build_conda.${ETAIL}
    tail -100 ${CRDS_CRON}/build_conda.${ETAIL}

    echo "=========================================================="
    echo "Re-enabling Cron now"
    echo "=========================================================="
    crontab <host/crontab
    crontab -l

    echo "==========================================================="
    echo "Server re-install and re-start"
    echo "==========================================================="
    ./rerun >& ${CRDS_CRON}/rerun.${ETAIL}
    tail -100 ${CRDS_CRON}/rerun.${ETAIL}
else
    echo "==========================================================="
    echo "Server restart"
    echo "==========================================================="
    ./stop >& ${CRDS_CRON}/restart.${ETAIL}
    sleep 10
    ./run >>& ${CRDS_CRON}/restart.${ETAIL}
endif

echo "============================================================"
echo "Backing up server"
echo "============================================================"
cd ${CRDS}/CRDS_server
backup_server >& ${CRDS_CRON}/backup.${ETAIL}
tail -100 ${CRDS_CRON}/backup.${ETAIL}

echo "==========================================================="
echo "Clearing session table"
echo "==========================================================="
cd ${CRDS}/CRDS_server
./manage clearsessions

echo "==========================================================="
echo "Clearing expired locks"
echo "==========================================================="
clear_expired_locks  >& ${CRDS_CRON}/clear_expired_locks.${ETAIL}
tail -100 ${CRDS_CRON}/clear_expired_locks.${ETAIL}

echo "==========================================================="
echo "Server cache certify check, last 5 contexts"
echo "==========================================================="
crds_certify_cache 1 --exist >& ${CRDS_CRON}/crds_certify_cache.${ETAIL}
snip ${CRDS_CRON}/crds_certify_cache.${ETAIL} 100

echo "==========================================================="
echo "Server orphan files check"
echo "==========================================================="
cd ${CRDS}/CRDS_server
orphan_files --verbose >& ${CRDS_CRON}/orphan_files.${ETAIL}
tail -100 ${CRDS_CRON}/orphan_files.${ETAIL}

echo "==========================================================="
echo "Server model defects check"
echo "==========================================================="
cd ${CRDS}/CRDS_server
host/check_defects --all --references

if ( "$CRDS_USECASE" != "ops" ) then
    echo "==========================================================="
    echo "Server self-test"
    echo "==========================================================="
    cd ${CRDS}/CRDS_server
    ./runtests 
    tail -100 runtests.${ETAIL}
endif

