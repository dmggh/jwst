#! /usr/bin/env python
#-*-python-*-

import sys

import crds
from crds import pysh, client

def main(base_command, context, args):
    """Run `base_command`"""
    client.dump_mappings(context)
    for instrument in crds.get_cached_mapping(context).selections:
        command = base_command + " " + " ".join(args)
        command = command.replace("CONTEXT", context)
        command = command.replace("INSTRUMENT", instrument)
        pysh.sh(command, trace_commands=True)

if __name__ == "__main__":
    pysh.usage("<base_command>  <context>  [remaining parameters...]", 2, help="""
    
    This script is used to iterate a base_command over all instruments applicable to the
    specified context.   base_command is run in a subprocess for each instrument reducing
    memory consumption to that of a single instrument.
    
    ${context} and CONTEXT are replaced with <context>
    ${instrument and INSTRUMENT are replaced by the current instrument of the iteration.
    """)
    base_command = sys.argv[1]
    if "operational" in sys.argv[2]:
        context = crds.get_default_context()
    else:
        context = sys.argv[2]
    main(base_command, context, sys.argv[3:])

