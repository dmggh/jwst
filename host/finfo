#! /usr/bin/env python
from __future__ import print_function
from __future__ import unicode_literals
from __future__ import division
from __future__ import absolute_import
from future import standard_library
standard_library.install_aliases()
from builtins import *

# -----------------------------------------------------------------------------------

import sys

# -----------------------------------------------------------------------------------

from astropy.io import fits

# -----------------------------------------------------------------------------------

from crds import log, utils, config

# -----------------------------------------------------------------------------------

def finfo(reference):

    print("-"*80)

    fits.info(reference)

    with fits.open(reference, mode="readonly", do_not_scale_image_data=True) as hdulist:
        for (i, hdu) in enumerate(hdulist):
            if hasattr(hdu.data, "names"):
                print()
                print("[%d]: " % i, " ".join(hdu.data.names))


def main():
    for fname in sys.argv[1:]:
        fpath = None
        with log.error_on_exception("Error locating pathless file"):
            observatory = utils.file_to_observatory(fname)
            
            fpath = config.locate_file(fname, observatory)
        if fpath is None:
            continue
        if fname != fpath:
            log.info("Locating", repr(fname), "at", repr(fpath), "in CRDS cache.")
        with log.error_on_exception("Failed info for", repr(fname), "at", repr(fpath)):
            finfo(fpath)

if __name__ == "__main__":
    main()

