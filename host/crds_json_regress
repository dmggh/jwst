#! /usr/bin/env python
#-*-python-*-

from __future__ import unicode_literals
from __future__ import print_function
from __future__ import division
from __future__ import absolute_import
from future import standard_library
standard_library.install_aliases()
from builtins import *
import sys

from crds.core import pysh

pysh.usage("<context> [--update] [--strict] [bestrefs parameters...]", min_args=1, help="""

This script is used to run a bestrefs regression using prior results serialized in .json files.   This is a stricter
test than a context-to-context comparison because it can detect differences produced by changes to CRDS library code.

--update will replace the historical results in the .json files with results from the current context.

--strict is equivalent to --na-differences-matter --undefined-differences-matter.
""")

context = sys.argv[1]

if "--update" in sys.argv:
    sys.argv.remove("--update")
    update = "--update-pickle --save-pickle INSTRUMENT.json"
else:
    update = ""

if "--strict" in sys.argv:
    sys.argv.remove("--strict")
    strict = "--na-differences-matter --undefined-differences-matter"
else:
    strict = ""

pysh.sh("crds_instrument_iter 'python -m crds.bestrefs --dump-cmdline --new-context CONTEXT ' ${context} " +
        " --load-pickle INSTRUMENT.json --profile=profile_INSTRUMENT.stats ${update} ${strict} --regress --dump-cmdline " + " ".join(sys.argv[2:]))

