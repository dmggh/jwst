#! /bin/csh 

# This script is intended to be run periodically as a cronjob and to
# compare the context at the last run to the current operational
# context.  When the operational context changes, the affected datasets
# script is run to asssess which datasets have new references and are
# candidates for reprocessing.

cd $CRDS/CRDS_server
source env.csh

echo "Monitoring reprocessing opportunities based on context changes."

if (${CRDS_PROJECT} == "jwst") then
    echo "Quitting JWST reprocessing,  no DADSOPS dataset header source."
    exit 0   # no JWST reprocessing until equivalent of DADSOPS exists and is interfaced.
endif

cd ${CRDS}/monitor_reprocessing

echo "Determining current operational context."

set old_context = `cat old_context.txt`
set new_context = `python -m crds.list --config |& grep operational_context | cut -d"'" -f2`
echo "$new_context" >old_context.txt

if ("$old_context" != "") then

    # rip out the ints so csh < works,  e.g. hst_0200.pmap --> 0200
    set old = `echo ${old_context} | cut -d'_' -f2`
    set old = `echo ${old} | cut -d'.' -f1 | sed 's/^0*//g'`
    set new = `echo ${new_context} | cut -d'_' -f2`
    set new = `echo ${new} | cut -d'.' -f1 | sed 's/^0*//g'`

    if ($old < $new) then
	# output affected datasets e-mail
	affected_datasets $old_context $new_context fast mail official --optimize-tables --print-affected
	clear_web_cache
	# capture catalog and results for future regressions.
	capture $new_context
    else
	echo "No change in context $new_context"
    endif
else
    echo "Initializing context monitor at context $new_context"
endif

